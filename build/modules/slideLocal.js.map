{
  "version": 3,
  "sources": ["../../src/modules/slideLocal.ts"],
  "sourcesContent": ["import { GlobalHelper } from \"./global-helper\";\nimport { getPictureInformation } from \"./exif\"\n\nexport interface LocalPicture{\n\turl: string,\n\tpath: string,\n\tinfo1: string,\n\tinfo2: string,\n\tinfo3: string,\n\tdate: Date | null\n}\n\nexport interface LocalPictureListUpdateResult{\n\tsuccess: boolean;\n\tpicturecount: number;\n}\n\nlet CurrentImages: LocalPicture[];\nlet CurrentImage: LocalPicture;\n\nexport async function getPicture(Helper: GlobalHelper): Promise<LocalPicture | null> {\n\ttry{\n\t\tif (CurrentImages.length === 0){\n\t\t\tawait updatePictureList(Helper);\n\t\t}\n\t\tif (CurrentImages.length !== 0){\n\t\t\tif (!CurrentImage){\n\t\t\t\tCurrentImage = CurrentImages[0];\n\t\t\t} else {\n\t\t\t\tif (CurrentImages.indexOf(CurrentImage) === CurrentImages.length - 1){\n\t\t\t\t\tCurrentImage = CurrentImages[0];\n\t\t\t\t} else {\n\t\t\t\t\tCurrentImage = CurrentImages[CurrentImages.indexOf(CurrentImage) + 1];\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn CurrentImage;\n\t\t}\n\t\treturn null;\n\t}catch(err){\n\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Local\", \"getPicture\");\n\t\treturn null;\n\t}\n}\n\nexport async function updatePictureList(Helper: GlobalHelper): Promise<LocalPictureListUpdateResult> {\n\ttry{\n\t\tCurrentImages = [];\n\t\tconst CurrentImageFiles = await (Helper.Adapter.readDirAsync(\"vis.0\", \"/slideshow\"));\n\t\tif (!(CurrentImageFiles.length > 0)){\n\t\t\tHelper.ReportingError(null, \"No pictures found in folder\", \"Local\", \"updatePictureList/List\",\"\", false);\n\t\t\treturn { success: false, picturecount: 0};\n\t\t} else {\n\t\t\tawait Promise.all(CurrentImageFiles.map(async file => {\n\t\t\t\tconst CurrentImageFile = await Helper.Adapter.readFileAsync(\"vis.0\", `/slideshow/${file.file}`);\n\t\t\t\tconst fileInfo = await getPictureInformation(Helper, CurrentImageFile.data);\n\t\t\t\tlet info1, info2, info3 = \"\";\n\t\t\t\tlet date = null;\n\t\t\t\tfileInfo?.info1 ? info1 = fileInfo?.info1 : info1 = \"\";\n\t\t\t\tfileInfo?.info2 ? info2 = fileInfo?.info2 : info2 = \"\";\n\t\t\t\tfileInfo?.info3 ? info3 = fileInfo?.info3 : info3 = \"\";\n\t\t\t\tfileInfo?.date ? date = fileInfo?.date : date = null;\n\t\t\t\tif (Array.isArray(CurrentImages)){\n\t\t\t\t\tCurrentImages.push( {url: `/vis.0/slideshow/${file.file}`, path: file.file, info1: info1, info2: info2, info3: info3, date: date} );\n\t\t\t\t}else{\n\t\t\t\t\tCurrentImages = [ {url: `/vis.0/slideshow/${file.file}`, path: file.file, info1: info1, info2: info2, info3: info3, date: date} ];\n\t\t\t\t}\n\t\t\t}))\n\t\t}\n\t\tHelper.ReportingInfo(\"Info\", \"Local\", `${CurrentImages.length} pictures found`, {JSON: JSON.stringify(CurrentImages.slice(0, 10))} );\n\t\treturn { success: true, picturecount: CurrentImages.length};\n\t}catch(err) {\n\t\tHelper.ReportingError(err as Error, \"Unknown Error\", \"Local\", \"updatePictureList/List\");\n\t\treturn { success: false, picturecount: 0};\n\t}\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,kBAAsC;AAgBtC,IAAI;AACJ,IAAI;AAEJ,0BAAiC,QAAoD;AACpF,MAAG;AACF,QAAI,cAAc,WAAW,GAAE;AAC9B,YAAM,kBAAkB;AAAA;AAEzB,QAAI,cAAc,WAAW,GAAE;AAC9B,UAAI,CAAC,cAAa;AACjB,uBAAe,cAAc;AAAA,aACvB;AACN,YAAI,cAAc,QAAQ,kBAAkB,cAAc,SAAS,GAAE;AACpE,yBAAe,cAAc;AAAA,eACvB;AACN,yBAAe,cAAc,cAAc,QAAQ,gBAAgB;AAAA;AAAA;AAGrE,aAAO;AAAA;AAER,WAAO;AAAA,WACD,KAAN;AACA,WAAO,eAAe,KAAc,iBAAiB,SAAS;AAC9D,WAAO;AAAA;AAAA;AAIT,iCAAwC,QAA6D;AACpG,MAAG;AACF,oBAAgB;AAChB,UAAM,oBAAoB,MAAO,OAAO,QAAQ,aAAa,SAAS;AACtE,QAAI,CAAE,mBAAkB,SAAS,IAAG;AACnC,aAAO,eAAe,MAAM,+BAA+B,SAAS,0BAAyB,IAAI;AACjG,aAAO,EAAE,SAAS,OAAO,cAAc;AAAA,WACjC;AACN,YAAM,QAAQ,IAAI,kBAAkB,IAAI,OAAM,SAAQ;AACrD,cAAM,mBAAmB,MAAM,OAAO,QAAQ,cAAc,SAAS,cAAc,KAAK;AACxF,cAAM,WAAW,MAAM,uCAAsB,QAAQ,iBAAiB;AACtE,YAAI,OAAO,OAAO,QAAQ;AAC1B,YAAI,OAAO;AACX,8CAAU,SAAQ,QAAQ,qCAAU,QAAQ,QAAQ;AACpD,8CAAU,SAAQ,QAAQ,qCAAU,QAAQ,QAAQ;AACpD,8CAAU,SAAQ,QAAQ,qCAAU,QAAQ,QAAQ;AACpD,8CAAU,QAAO,OAAO,qCAAU,OAAO,OAAO;AAChD,YAAI,MAAM,QAAQ,gBAAe;AAChC,wBAAc,KAAM,EAAC,KAAK,oBAAoB,KAAK,QAAQ,MAAM,KAAK,MAAM,OAAc,OAAc,OAAc;AAAA,eAClH;AACJ,0BAAgB,CAAE,EAAC,KAAK,oBAAoB,KAAK,QAAQ,MAAM,KAAK,MAAM,OAAc,OAAc,OAAc;AAAA;AAAA;AAAA;AAIvH,WAAO,cAAc,QAAQ,SAAS,GAAG,cAAc,yBAAyB,EAAC,MAAM,KAAK,UAAU,cAAc,MAAM,GAAG;AAC7H,WAAO,EAAE,SAAS,MAAM,cAAc,cAAc;AAAA,WAC9C,KAAN;AACA,WAAO,eAAe,KAAc,iBAAiB,SAAS;AAC9D,WAAO,EAAE,SAAS,OAAO,cAAc;AAAA;AAAA;",
  "names": []
}
